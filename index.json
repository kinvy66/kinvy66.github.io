[{"categories":["hugo"],"content":"Valine 评论系统 邮件通知","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":" 本文同步更新至 Youtube 和 BiliBili 注意：Leancloud已经改版，有些界面位置已经与本文内容有所变化。 如果你对 Valine 自带的邮件提醒不满意，还可以使用更完善的第三方邮件提醒： Valine-Admin (by @zhaojun1998)，感谢 Valine-Admin 及其作者~ ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:0:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"概览 　此项目是一个对 Valine 评论系统的拓展应用，可增强 Valine 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 通知站长 和 @ 通知 的功能，而且还支持自定义 邮件通知模板。　","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:1:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"部署Github源码 使用第三方评论插件的话，就无需使用 Valine 自带邮件提醒插件。在配置文件 config.toml 中把 notify 设置为 false。 进入 Leancloud 对应的 Valine 应用中，点击 云引擎 -\u003e 设置 填写代码库并保存：https://github.com/zhaojun1998/Valine-Admin 　切换到部署标签页，选择 Git 源码部署 　分支使用 master，点击部署即可 　可以在 云引擎 -\u003e 应用日志 查看部署日志信息 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:1:1","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"配置 　此外，你需要设置云引擎的环境变量以提供必要的信息，点击 云引擎 -\u003e 设置，找到 自定义环境变量 必选参数 SITE_NAME : 网站名称。 SITE_URL : 网站地址， 最后不要加 / 。 SMTP_USER : SMTP 服务用户名，一般为邮箱地址。 SMTP_PASS : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式 SMTP_SERVICE : 邮件服务提供商，支持 QQ、163、126、Gmail、\"Yahoo\"、...... ，全部支持请参考 : Nodemailer Supported services。 — 如这里没有你使用的邮件提供商，请查看自定义邮件服务器 SENDER_NAME : 寄件人名称。 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:2:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"邮箱开启 SMTP 服务 　想要使用第三方邮件提醒，必须将 SMTP_USER 中的邮箱开启 SMTP 服务，这里以 QQ 邮箱为例： 　然后将 邮箱地址 设置至 SMTP_USER，邮箱授权码 设置至 SMTP_PASS，SMTP_SERVICE 中填写 QQ ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:2:1","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"其他功能 TEMPLATE_NAME：设置提醒邮件的主题，目前内置了两款主题，分别为 default 与 rainbow。默认为 default 。 TO_EMAIL：这个是填收邮件提醒的邮箱地址，若没有这个字段，则邮件将发到SMTP_USER。 　如果 SMTP_SERVICE 中没有你使用的邮件服务提供商, 也可以进行自定义。 　参数配置如下： SMTP_HOST : 邮件服务提供商 SMTP 地址，如 qq : smtp.qq.com，此项需要自行查询或询问其服务商。 SMTP_PORT : 邮件服务提供商 SMTP 端口, 此项需要自行查询或询问其服务商。 SMTP_SECURE : 是否启用加密, 默认为 true，一般不需要设置，如有特殊请自行配置。 此项需要自行查询或询问其服务商。 注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:2:2","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"关闭LeanCloud 休眠 　免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行： 每天必须休眠 6 个小时 30 分钟内没有外部请求，则休眠。 休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。 　分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。 　首先需要先配置下 Web 主机的域名，使用定时器时要用到。配置方式如下。 　点击 云引擎 -\u003e 设置，找到 Web 主机域名 此处如果要设置自定义的 Web 主机域名，根据中国大陆有关法律法规，国内用户绑定独立域名前必须先域名备案。 使用自带定时器 　首先需要添加环境变量，ADMIN_URL：Web 主机域名，如图所示（添加后重启容器才会生效）： 　然后点击云引擎 - 定时任务，新增定时器，按照图片上填写： 定时任务名称：自定义 选择生成环境：self_wake Cron 表达式：定时器触发代码，表示 7点 ~ 23点每20分钟执行一次 　添加后要记得点击启用，启用状态如下： 　启用成功后，每 20 分钟在 云引擎 -\u003e 应用日志 中可以看到日志。 注意：更新新版本与更改环境变量均需要重启容器后生效。 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:2:3","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"LeanCloud 评论管理 　LeanCloud 提供了一套评论管理后台，该后台登录需要账号密码，需要在这里设置，只需要填写 email、password、username，这三个字段即可, 使用 email 作为账号登陆即可。（为了安全考虑，此 email 必须为配置中的 SMTP_USER 或 TO_EMAIL， 否则不允许登录） 　访问自己的 Web 主机域名，效果如下： 　使用已设置好的账号密码登录即可管理评论。 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:2:4","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"完工 　此时，我们在站点发表评论以后，邮箱中就会收到提醒信息啦。 ","date":"2020-01-16","objectID":"http://Kinvy66.github.io/posts/hugo-valine-email/:3:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现评论后实时邮件通知","uri":"http://Kinvy66.github.io/posts/hugo-valine-email/"},{"categories":["hugo"],"content":"Valine 评论系统 leancloud","date":"2020-01-10","objectID":"http://Kinvy66.github.io/posts/hugo-valine/","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现简洁的评论交互","uri":"http://Kinvy66.github.io/posts/hugo-valine/"},{"categories":["hugo"],"content":" 本文同步更新至 Youtube 和 BiliBili 作者已经在最新的主题中加入了Algolia搜索，现在只要在配置文件中开启一下即可。 ","date":"2020-01-10","objectID":"http://Kinvy66.github.io/posts/hugo-valine/:0:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现简洁的评论交互","uri":"http://Kinvy66.github.io/posts/hugo-valine/"},{"categories":["hugo"],"content":"Leancloud相关配置 评论系统依赖于leancloud，所以需要先在leancloud中进行相关的准备工作。 登录 或 注册 LeanCloud 登录成功后，进入后台点击左上角的创建应用： 进入应用，左边栏找到【设置】【应用Key】 记录 App ID，App Key 后面配置文件中会用到： 建立两个新的存储,因为评论和文章阅读数统计依赖于存储Class 创建两个存储Class，分别命名为: Counter 和 Comment; 为应用添加安全域名，左边栏点击【设置】【安全中心】【安全域名】 输入博客使用的域名，点击保存即可： ","date":"2020-01-10","objectID":"http://Kinvy66.github.io/posts/hugo-valine/:1:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现简洁的评论交互","uri":"http://Kinvy66.github.io/posts/hugo-valine/"},{"categories":["hugo"],"content":"config.toml添加参数 为了使配置更灵活，将 Valine 中大部分初始化参数项均设置为配置文件中的参数项，在 config.toml 的适当位置，比如我的文件中 [params.gitment] 的下面： [params.gitment] # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment owner = \"\" # Your GitHub ID repo = \"\" # The repo to store comments clientId = \"\" # Your client ID clientSecret = \"\" # Your client secret # 这里添加Valine的相关参数 添加 Valine 参数项： # Valine. # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org [params.valine] enable = true appId = '你的appId' appKey = '你的appKey' notify = false # mail notifier , https://github.com/xCss/Valine/wiki verify = false # Verification code avatar = 'mm' placeholder = '说点什么吧...' visitor = true 上面几项内容的含义，这里简单一说，具体还是要看 Valine官网中配置相关的内容： 参数 用途 enable 这是用于主题中配置的，不是官方Valine的参数，true时控制开启此评论系统 appId 这是在 leancloud 后台应用中获取的，也就是上面提到的 App ID appKey 这是在 leancloud 后台应用中获取的，也就是上面提到的 App Key notify 用于控制是否开启邮件通知功能，具体参考邮件提醒配置 verify 用于控制是否开启评论验证码功能 avatar 用于配置评论项中用户头像样式，有多种选择：mm, identicon, monsterid, wavatar, retro, hide。详细参考：头像配置 placehoder 评论框的提示符 visitor 控制是否开启文章阅读数的统计功能i, 详情阅读文章阅读数统计 ","date":"2020-01-10","objectID":"http://Kinvy66.github.io/posts/hugo-valine/:2:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现简洁的评论交互","uri":"http://Kinvy66.github.io/posts/hugo-valine/"},{"categories":["hugo"],"content":"修改主题文件 主要是修改主题中评论相关的布局文件 themes/even/layouts/partials/comments.html，按照 Valine快速开始 添加 Valine 相关代码，找到以下位置，大概55～81行的位置： \u003c!-- gitment --\u003e {{- if .Site.Params.gitment.enable -}} \u003cdiv id=\"comments-gitment\"\u003e\u003c/div\u003e \u003c!--这里省略了部分代码--\u003e \u003cnoscript\u003ePlease enable JavaScript to view the \u003ca href=\"https://github.com/imsun/gitment\"\u003ecomments powered by gitment.\u003c/a\u003e\u003c/noscript\u003e {{- end }} \u003c!--这个位置添加Valine相关代码--\u003e 添加的 Valine 评论的代码如下： \u003c!-- valine --\u003e {{- if .Site.Params.valine.enable -}} \u003c!-- id 将作为查询条件 --\u003e \u003cspan id=\"{{ .URL | relURL }}\" class=\"leancloud_visitors\" data-flag-title=\"{{ .Title }}\"\u003e \u003cspan class=\"post-meta-item-text\"\u003e文章阅读量 \u003c/span\u003e \u003cspan class=\"leancloud-visitors-count\"\u003e1000000\u003c/span\u003e \u003cp\u003e\u003c/p\u003e \u003c/span\u003e \u003cdiv id=\"vcomments\"\u003e\u003c/div\u003e \u003cscript src=\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"\u003e\u003c/script\u003e \u003cscript src='//unpkg.com/valine/dist/Valine.min.js'\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\"\u003e new Valine({ el: '#vcomments' , appId: '{{ .Site.Params.valine.appId }}', appKey: '{{ .Site.Params.valine.appKey }}', notify: {{ .Site.Params.valine.notify }}, verify: {{ .Site.Params.valine.verify }}, avatar:'{{ .Site.Params.valine.avatar }}', placeholder: '{{ .Site.Params.valine.placeholder }}', visitor: {{ .Site.Params.valine.visitor }} }); \u003c/script\u003e {{- end }} 可以看到上述代码中引用了配置文件中的相关参数，这样以后修改配置就不用修改代码了，只需要改配置文件 config.toml，另外注意到的是，我也添加了文章阅读数统计的显示内容。将配置文件中 valine 配置的 eanble 设置为 true ，本地测试一下，正常的话，打开一篇文章会看到： 此时，生成静态博客文件，部署到自己的托管平台，正常的话打开博客中的一篇文章，就可以看到正常的文章计数和评论框了，此时随便评论一条，验证一下，评论如果成功，可以去leancloud后台看一下 Comment 和 Counter存储中新加了相应网址的条目。 ","date":"2020-01-10","objectID":"http://Kinvy66.github.io/posts/hugo-valine/:3:0","tags":["Valine"],"title":"用 Hugo 配合 Valine 实现简洁的评论交互","uri":"http://Kinvy66.github.io/posts/hugo-valine/"}]